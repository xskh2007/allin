{"remainingRequest":"/Users/wangqiantu/allin/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/wangqiantu/allin/vue-admin-template/node_modules/eslint-loader/index.js??ref--13-0!/Users/wangqiantu/allin/vue-admin-template/src/store/modules/user.js","dependencies":[{"path":"/Users/wangqiantu/allin/vue-admin-template/src/store/modules/user.js","mtime":1612507230445},{"path":"/Users/wangqiantu/allin/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangqiantu/allin/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangqiantu/allin/vue-admin-template/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCB7IGxvZ2luIGFzIF9sb2dpbiwgbG9nb3V0LCBnZXRJbmZvIGFzIF9nZXRJbmZvIH0gZnJvbSAnQC9hcGkvdXNlcic7CmltcG9ydCB7IGdldFRva2VuLCBzZXRUb2tlbiwgcmVtb3ZlVG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOwppbXBvcnQgeyByZXNldFJvdXRlciB9IGZyb20gJ0Avcm91dGVyJzsKCnZhciBnZXREZWZhdWx0U3RhdGUgPSBmdW5jdGlvbiBnZXREZWZhdWx0U3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIHRva2VuOiBnZXRUb2tlbigpLAogICAgbmFtZTogJycsCiAgICBhdmF0YXI6ICcnCiAgfTsKfTsKCnZhciBzdGF0ZSA9IGdldERlZmF1bHRTdGF0ZSgpOwp2YXIgbXV0YXRpb25zID0gewogIFJFU0VUX1NUQVRFOiBmdW5jdGlvbiBSRVNFVF9TVEFURShzdGF0ZSkgewogICAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgZ2V0RGVmYXVsdFN0YXRlKCkpOwogIH0sCiAgU0VUX1RPS0VOOiBmdW5jdGlvbiBTRVRfVE9LRU4oc3RhdGUsIHRva2VuKSB7CiAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogIH0sCiAgU0VUX05BTUU6IGZ1bmN0aW9uIFNFVF9OQU1FKHN0YXRlLCBuYW1lKSB7CiAgICBzdGF0ZS5uYW1lID0gbmFtZTsKICB9LAogIFNFVF9BVkFUQVI6IGZ1bmN0aW9uIFNFVF9BVkFUQVIoc3RhdGUsIGF2YXRhcikgewogICAgc3RhdGUuYXZhdGFyID0gYXZhdGFyOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLy8gdXNlciBsb2dpbgogIC8vIGxvZ2luKHsgY29tbWl0IH0sIHVzZXJJbmZvKSB7CiAgLy8gICBjb25zdCB7IHVzZXJuYW1lLCBwYXNzd29yZCB9ID0gdXNlckluZm8KICAvLyAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgLy8gICAgIGxvZ2luKHsgdXNlcm5hbWU6IHVzZXJuYW1lLnRyaW0oKSwgcGFzc3dvcmQ6IHBhc3N3b3JkIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogIC8vICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzcG9uc2UKICAvLyAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIGRhdGEudG9rZW4pCiAgLy8gICAgICAgc2V0VG9rZW4oZGF0YS50b2tlbikKICAvLyAgICAgICByZXNvbHZlKCkKICAvLyAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogIC8vICAgICAgIHJlamVjdChlcnJvcikKICAvLyAgICAgfSkKICAvLyAgIH0pCiAgLy8gfSwKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlckluZm8pIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHZhciB1c2VybmFtZSA9IHVzZXJJbmZvLnVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkID0gdXNlckluZm8ucGFzc3dvcmQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBfbG9naW4oewogICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZS50cmltKCksCiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29tbWl0KCdTRVRfVE9LRU4nLCByZXNwb25zZS50b2tlbik7CiAgICAgICAgc2V0VG9rZW4ocmVzcG9uc2UudG9rZW4pOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIGdldCB1c2VyIGluZm8KICAvL2dldEluZm8oeyBjb21taXQsIHN0YXRlIH0pIHsKICAvLyAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAvLyAgICBnZXRJbmZvKHN0YXRlLnRva2VuKS50aGVuKHJlc3BvbnNlID0+IHsKICAvLyAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzcG9uc2UKICAvLyAgICAgIGlmICghZGF0YSkgewogIC8vICAgICAgICByZXR1cm4gcmVqZWN0KCdWZXJpZmljYXRpb24gZmFpbGVkLCBwbGVhc2UgTG9naW4gYWdhaW4uJykKICAvLyAgICAgIH0KICAvLyAgICAgIGNvbnN0IHsgbmFtZSwgYXZhdGFyIH0gPSBkYXRhCiAgLy8gICAgICBjb21taXQoJ1NFVF9OQU1FJywgbmFtZSkKICAvLyAgICAgIGNvbW1pdCgnU0VUX0FWQVRBUicsIGF2YXRhcikKICAvLyAgICAgIHJlc29sdmUoZGF0YSkKICAvLyAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgLy8gICAgICByZWplY3QoZXJyb3IpCiAgLy8gICAgfSkKICAvLyAgfSkKICAvL30sCiAgZ2V0SW5mbzogZnVuY3Rpb24gZ2V0SW5mbyhfcmVmMikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwKICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgX2dldEluZm8oKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgaWYgKCFkYXRhKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KCdWZXJpZmljYXRpb24gZmFpbGVkLCBwbGVhc2UgTG9naW4gYWdhaW4uJyk7CiAgICAgICAgfQoKICAgICAgICB2YXIgdXNlcm5hbWUgPSBkYXRhLnVzZXJuYW1lLAogICAgICAgICAgICBhdmF0YXIgPSBkYXRhLmF2YXRhcjsKICAgICAgICBjb21taXQoJ1NFVF9OQU1FJywgdXNlcm5hbWUpOwogICAgICAgIGNvbW1pdCgnU0VUX0FWQVRBUicsIGF2YXRhcik7CiAgICAgICAgcmVzb2x2ZShkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIHVzZXIgbG9nb3V0CiAgLy9sb2dvdXQoeyBjb21taXQsIHN0YXRlIH0pIHsKICAvLyAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAvLyAgICBsb2dvdXQoc3RhdGUudG9rZW4pLnRoZW4oKCkgPT4gewogIC8vICAgICAgcmVtb3ZlVG9rZW4oKSAvLyBtdXN0IHJlbW92ZSAgdG9rZW4gIGZpcnN0CiAgLy8gICAgICByZXNldFJvdXRlcigpCiAgLy8gICAgICBjb21taXQoJ1JFU0VUX1NUQVRFJykKICAvLyAgICAgIHJlc29sdmUoKQogIC8vICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAvLyAgICAgIHJlamVjdChlcnJvcikKICAvLyAgICB9KQogIC8vICB9KQogIC8vfSwKICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmMykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgcmVtb3ZlVG9rZW4oKTsgLy8gbXVzdCByZW1vdmUgIHRva2VuICBmaXJzdAoKICAgICAgcmVzZXRSb3V0ZXIoKTsKICAgICAgY29tbWl0KCdSRVNFVF9TVEFURScpOwogICAgICByZXNvbHZlKCk7CiAgICB9KTsKICB9LAogIC8vIHJlbW92ZSB0b2tlbgogIHJlc2V0VG9rZW46IGZ1bmN0aW9uIHJlc2V0VG9rZW4oX3JlZjQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgcmVtb3ZlVG9rZW4oKTsgLy8gbXVzdCByZW1vdmUgIHRva2VuICBmaXJzdAoKICAgICAgY29tbWl0KCdSRVNFVF9TVEFURScpOwogICAgICByZXNvbHZlKCk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/Users/wangqiantu/allin/vue-admin-template/src/store/modules/user.js"],"names":["login","logout","getInfo","getToken","setToken","removeToken","resetRouter","getDefaultState","token","name","avatar","state","mutations","RESET_STATE","Object","assign","SET_TOKEN","SET_NAME","SET_AVATAR","actions","userInfo","commit","username","password","Promise","resolve","reject","trim","then","response","catch","error","data","resetToken","namespaced"],"mappings":"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","sourcesContent":["import { login, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport { resetRouter } from '@/router'\n\nconst getDefaultState = () => {\n  return {\n    token: getToken(),\n    name: '',\n    avatar: ''\n  }\n}\n\nconst state = getDefaultState()\n\nconst mutations = {\n  RESET_STATE: (state) => {\n    Object.assign(state, getDefaultState())\n  },\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  }\n}\n\nconst actions = {\n  // user login\n  // login({ commit }, userInfo) {\n  //   const { username, password } = userInfo\n  //   return new Promise((resolve, reject) => {\n  //     login({ username: username.trim(), password: password }).then(response => {\n  //       const { data } = response\n  //       commit('SET_TOKEN', data.token)\n  //       setToken(data.token)\n  //       resolve()\n  //     }).catch(error => {\n  //       reject(error)\n  //     })\n  //   })\n  // },\n\n\n  login({ commit }, userInfo) {\n  const { username, password } = userInfo\n  return new Promise((resolve, reject) => {\n    login({ username: username.trim(), password: password }).then(response => {\n      commit('SET_TOKEN', response.token)\n      setToken(response.token)\n      resolve()\n    }).catch(error => {\n      reject(error)\n    })\n  })\n},\n\n  // get user info\n  //getInfo({ commit, state }) {\n  //  return new Promise((resolve, reject) => {\n  //    getInfo(state.token).then(response => {\n  //      const { data } = response\n\n  //      if (!data) {\n  //        return reject('Verification failed, please Login again.')\n  //      }\n\n  //      const { name, avatar } = data\n\n  //      commit('SET_NAME', name)\n  //      commit('SET_AVATAR', avatar)\n  //      resolve(data)\n  //    }).catch(error => {\n  //      reject(error)\n  //    })\n  //  })\n  //},\n\n  getInfo({ commit, state }) {\n  return new Promise((resolve, reject) => {\n    getInfo().then(response => {\n      const { data } = response\n\n      if (!data) {\n        return reject('Verification failed, please Login again.')\n      }\n\n      const { username, avatar } = data\n\n      commit('SET_NAME', username)\n      commit('SET_AVATAR', avatar)\n      resolve(data)\n    }).catch(error => {\n      reject(error)\n    })\n  })\n},\n\n  // user logout\n  //logout({ commit, state }) {\n  //  return new Promise((resolve, reject) => {\n  //    logout(state.token).then(() => {\n  //      removeToken() // must remove  token  first\n  //      resetRouter()\n  //      commit('RESET_STATE')\n  //      resolve()\n  //    }).catch(error => {\n  //      reject(error)\n  //    })\n  //  })\n  //},\n\n  logout({ commit, state }) {\n  return new Promise((resolve, reject) => {\n    removeToken() // must remove  token  first\n    resetRouter()\n    commit('RESET_STATE')\n    resolve()\n  })\n},\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      removeToken() // must remove  token  first\n      commit('RESET_STATE')\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n\n"]}]}